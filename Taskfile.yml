version: "3"

includes:
  docs: "docs/tasks.yml"
  lint: "lint-tasks.yml"
  utils: "tools/yscope-dev-utils/exports/taskfiles/utils/utils.yaml"

vars:
  # Paths
  BUILD_DIR: "{{.ROOT_DIR}}/build"
  CLP_FFI_PY_CMAKE_BUILD_DIR: "{{.BUILD_DIR}}/cmake_build"
  CLP_FFI_PY_CMAKE_CACHE: "{{.CLP_FFI_PY_CMAKE_BUILD_DIR}}/CMakeCache.txt"
  CLP_FFI_PY_COMPILE_COMMANDS_DB: "{{.CLP_FFI_PY_CMAKE_BUILD_DIR}}/compile_commands.json"
  CLP_FFI_PY_CPP_SRC_DIR: "{{.ROOT_DIR}}/src/clp_ffi_py"
  WHEEL_BUILD_DIR: "{{.BUILD_DIR}}/dist"
  WHEEL_VENV_DIR: "{{.BUILD_DIR}}/wheel-venv"

tasks:
  default:
    deps: ["init", "wheel"]

  clean:
    cmds:
      - "rm -rf '{{.BUILD_DIR}}'"

  config-cmake-project:
    internal: true
    deps:
      - "init"
      - "submodules"
    sources:
      - "{{.TASKFILE}}"
      - "CMakeLists.txt"
    generates:
      - "{{.CLP_FFI_PY_CMAKE_CACHE}}"
      - "{{.CLP_FFI_PY_COMPILE_COMMANDS_DB}}"
    cmd: "cmake -S '{{.ROOT_DIR}}' -B '{{.CLP_FFI_PY_CMAKE_BUILD_DIR}}'"

  init:
    internal: true
    silent: true
    run: "once"
    cmds: ["mkdir -p '{{.BUILD_DIR}}'"]

  wheel:
    vars:
      CHECKSUM_FILE: "{{.BUILD_DIR}}/{{.TASK}}.md5"
      OUTPUT_DIR: "{{.WHEEL_BUILD_DIR}}"
    deps:
      - "init"
      - task: "utils:checksum:validate"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          INCLUDE_PATTERNS: ["{{.OUTPUT_DIR}}"]
      - "submodules"
      - "wheel-venv"
    cmds:
      - "rm -rf '{{.OUTPUT_DIR}}'"
      - |-
        . "{{.WHEEL_VENV_DIR}}/bin/activate"
        export SKBUILD_BUILD_DIR="{{.WHEEL_BUILD_DIR}}"
        python3 -m build --outdir "{{.OUTPUT_DIR}}"

      # This command must be last
      - task: "utils:checksum:compute"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          INCLUDE_PATTERNS: ["{{.OUTPUT_DIR}}"]
    sources:
      - "{{.BUILD_DIR}}/submodules.md5"
      - "{{.BUILD_DIR}}/wheel-venv.md5"
      - "{{.TASKFILE}}"
      - "CMakeLists.txt"
      - "clp_ffi_py/**/*"
      - "pyproject.toml"
      - "src/**/*"
    generates: ["{{.CHECKSUM_FILE}}"]

  submodules:
    internal: true
    vars:
      CHECKSUM_FILE: "{{.BUILD_DIR}}/{{.TASK}}.md5"
      OUTPUT_DIR: "src/clp"
    preconditions:
      # Ensure there are no uncommitted changes to the submodules since the submodule update
      # command might undo them. Specifically, the update command will undo any uncommitted changes
      # to the commits that the submodules point to.
      - sh: "git diff --quiet src/clp"
        msg: "There are uncommitted changes to the submodules. Commit or stash them first."
    deps:
      - "init"
      - task: "utils:checksum:validate"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          INCLUDE_PATTERNS: ["{{.OUTPUT_DIR}}"]
    cmds:
      - "git submodule update --init --recursive"

      # This command must be last
      - task: "utils:checksum:compute"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          INCLUDE_PATTERNS: ["{{.OUTPUT_DIR}}"]
    sources:
      - "{{.TASKFILE}}"
      - ".gitmodules"
    generates: ["{{.CHECKSUM_FILE}}"]

  wheel-venv:
    internal: true
    vars:
      CHECKSUM_FILE: "{{.BUILD_DIR}}/{{.TASK}}.md5"
      OUTPUT_DIR: "{{.WHEEL_VENV_DIR}}"
    deps:
      - "init"
      - task: "utils:checksum:validate"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          INCLUDE_PATTERNS: ["{{.OUTPUT_DIR}}"]
    cmds:
      - task: "utils:misc:create-venv"
        vars:
          LABEL: "wheel"
          OUTPUT_DIR: "{{.OUTPUT_DIR}}"
          REQUIREMENTS_FILE: "requirements-dev.txt"

      # This command must be last
      - task: "utils:checksum:compute"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          INCLUDE_PATTERNS: ["{{.OUTPUT_DIR}}"]
    sources:
      - "{{.TASKFILE}}"
      - "requirements-dev.txt"
    generates: ["{{.CHECKSUM_FILE}}"]
